{"version":3,"file":"static/js/692.39a238c1.chunk.js","mappings":"0IAGMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,eAAC,QAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBC,UAAW,SACXC,MAAOT,EAAME,QAAQQ,KAAKC,WALD,IAQ3B,K,8FCuCA,IA5CiB,SAACC,GAChB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OACE,gBAAKC,QAASJ,EAAMI,QAAU,SAACC,GAAD,OAAOL,EAAMI,QAAQC,EAAGL,EAAMM,MAA9B,EAAuC,KAArE,UACE,SAAC,IAAD,CACEF,QAPc,WAClBD,GAAYD,EACb,EAMKK,GAAI,CACFC,MAAO,QACPC,OAAQ,QACRpB,gBAAiBW,EAAMU,UACnB,YACCV,EAAMW,oBAENT,EAED,YAHA,MARR,UAcE,SAAC,IAAD,WACE,UAAC,IAAD,WACGF,EAAMY,OACP,SAAC,IAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,MACVR,GAAI,CAAES,GAAI,GAJZ,SAMGhB,EAAMM,SAET,SAAC,IAAD,CAAYQ,QAAQ,QAAQjB,MAAM,iBAAlC,SACGG,EAAMiB,eAOpB,C,8LC8FD,UA9HuB,WACrB,OAAoDhB,EAAAA,EAAAA,WAAS,GAA7D,eAAOiB,EAAP,KAA2BC,EAA3B,KACA,GAAoDlB,EAAAA,EAAAA,WAAS,GAA7D,eAAOmB,EAAP,KAA2BC,EAA3B,KACIC,GAAWC,EAAAA,EAAAA,MAMTC,EAA4B,WAChCL,GAAsB,EACvB,EAMKM,EAA4B,WAChCJ,GAAsB,EACvB,EAEKK,EAAgB,WACpBJ,EAAS,eACV,EA2DD,OACE,iCACE,SAAC,IAAD,CACER,QAAQ,KACRa,MAAM,SACNpB,GAAI,CAAEqB,EAAG,EAAGZ,GAAI,GAChBD,UAAU,MAJZ,2CAQA,UAAC,IAAD,CACEc,UAAU,MACVC,WAAW,SACXC,eAAe,SACfpC,QAAS,EACTY,GAAI,CAAEyB,EAAG,GALX,WAOE,SAAC,IAAD,WACE,kBAAOC,QAAQ,aAAf,UACE,SAAC,IAAD,CACErB,OAAO,SAAC,MAAD,CAAasB,KAAM,MAC1B5B,MAAM,oBACNF,QAnGqB,WAC/Be,GAAsB,EACvB,EAkGWR,oBAAoB,SAI1B,SAAC,IAAD,WACE,kBAAOsB,QAAQ,aAAf,UACE,SAAC,IAAD,CACErB,OAAO,SAAC,MAAD,CAAYsB,KAAM,MACzB5B,MAAM,gBACNF,QArGqB,WAC/BiB,GAAsB,EACvB,EAoGWV,oBAAoB,YAxF5B,+BACE,UAAC,IAAD,CAAQwB,KAAMjB,EAAoBkB,QAASZ,EAA3C,WACE,SAAC,IAAD,uCACA,SAAC,IAAD,WACE,UAAC,IAAD,8EACiE,cAAGa,KAAK,uBAAR,uBADjE,wRAI+C,mBAC7C,kBALF,oIAOE,cAAGA,KAAK,sCAAR,mCAPF,0CAYF,SAAC,IAAD,WACE,SAAC,IAAD,CAAQC,WAAS,EAAClC,QAASsB,EAA3B,kDAWN,+BACE,UAAC,IAAD,CAAQS,KAAMf,EAAoBgB,QAASX,EAA3C,WACE,SAAC,IAAD,8BACA,UAAC,IAAD,YACE,UAAC,IAAD,mBACM,cAAGY,KAAK,uBAAR,uBADN,4LAIE,mBACA,kBALF,oIAOE,cAAGA,KAAK,sCAAR,mCAPF,wCAYA,SAAC,IAAD,WACA,SAAC,IAAD,CAAQC,WAAS,EAAClC,QAASsB,EAA3B,sDAoDX,C","sources":["components/Item.js","components/MenuCard.js","routes/PhysicalRobots.js"],"sourcesContent":["import { styled } from \"@mui/material/styles\";\nimport Paper from \"@mui/material/Paper\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default Item;\n","import React, { useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\n\nconst MenuCard = (props) => {\n  const [clicked, setClicked] = useState(false);\n\n  const handleClick = () => {\n    setClicked(!clicked);\n  };\n\n  return (\n    <div onClick={props.onClick ? (e) => props.onClick(e, props.label) : null}>\n      <Card\n        onClick={handleClick}\n        sx={{\n          width: \"260px\",\n          height: \"260px\",\n          backgroundColor: props.grayedOut\n            ? \"lightgray\"\n            : !props.changeColorOnClick\n            ? null\n            : !clicked\n            ? null\n            : \"lightblue\",\n        }}\n      >\n        <CardActionArea>\n          <CardContent>\n            {props.image}\n            <Typography\n              gutterBottom\n              variant=\"h5\"\n              component=\"div\"\n              sx={{ mt: 4 }}\n            >\n              {props.label}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {props.info}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </div>\n  );\n};\n\nexport default MenuCard;\n","import React, { useState } from \"react\";\nimport { GrRaspberry } from \"react-icons/gr\";\nimport { SiMicrobit } from \"react-icons/si\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport Item from \"../components/Item\";\nimport MenuCard from \"../components/MenuCard\";\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst PhysicalRobots = () => {\n  const [freenoveDialogOpen, setFreenoveDialogOpen] = useState(false);\n  const [microbitDialogOpen, setMicrobitDialogOpen] = useState(false);\n  let navigate = useNavigate();\n\n  const handleFreenoveDialogOpen = () => {\n    setFreenoveDialogOpen(true);\n  };\n\n  const handleFreenoveDialogClose = () => {\n    setFreenoveDialogOpen(false);\n  };\n\n  const handleMicrobitDialogOpen = () => {\n    setMicrobitDialogOpen(true);\n  };\n\n  const handleMicrobitDialogClose = () => {\n    setMicrobitDialogOpen(false);\n  };\n\n  const genomeActions = () => {\n    navigate(\"/genome/mode\");\n  };\n\n  const showFreenoveDialog = () => {\n    return (\n      <>\n        <Dialog open={freenoveDialogOpen} onClose={handleFreenoveDialogClose}>\n          <DialogTitle>Freenove SmartCar Setup</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              4WD Smart Car is a RaspberryPi powered STEM kit distributed by <a href=\"https://freenove.com\"> Freenove</a>. FEAGI has support for the\n              controller board installed on this robot and can enable you to read sensory data from ultrasonic and\n              infrared sensors while being able to control the motors and servos available on the smart-car through\n              FEAGI and as a result of neuronal activities.<br/>\n              <br/>\n              If you are in possession of this robot, prior to proceeding to genome actions step, ensure you follow instructions located under\n              <a href=\"https://github.com/feagi/feagi/wiki\"> Freenove Setup Guide</a>\n              to connect FEAGI with your robot.\n\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={genomeActions}>\n              Proceed to genome actions...\n            </Button>\n        </DialogActions>\n        </Dialog>\n      </>\n    );\n  };\n\n  const showMicrobitDialog = () => {\n    return (\n      <>\n        <Dialog open={microbitDialogOpen} onClose={handleMicrobitDialogClose}>\n          <DialogTitle>Microbit Setup</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              The <a href=\"https://microbit.org\"> Microbit</a> a pocket-sized computer that makes learning coding easy and fun.\n              Microbit is packed with many capabilities but at this time FEAGI is only capable of interacting with its motor driver.\n\n              <br/>\n              <br/>\n              If you are in possession of this robot, prior to proceeding to genome actions step, ensure you follow instructions located under\n              <a href=\"https://github.com/feagi/feagi/wiki\"> Microbit Setup Guide</a>\n              to connect FEAGI with your robot.\n\n\n            </DialogContentText>\n            <DialogActions>\n            <Button autoFocus onClick={genomeActions}>\n              Proceed to genome actions...\n            </Button>\n        </DialogActions>\n          </DialogContent>\n        </Dialog>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n        sx={{ p: 4, mt: 8 }}\n        component=\"div\"\n      >\n        Select Robot Controller Type\n      </Typography>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={2}\n        sx={{ m: 2 }}\n      >\n        <Item>\n          <label htmlFor=\"robot-card\">\n            <MenuCard\n              image={<GrRaspberry size={150} />}\n              label=\"Freenove SmartCar\"\n              onClick={handleFreenoveDialogOpen}\n              changeColorOnClick={false}\n            />\n          </label>\n        </Item>\n        <Item>\n          <label htmlFor=\"robot-card\">\n            <MenuCard\n              image={<SiMicrobit size={150} />}\n              label=\"BBC micro:bit\"\n              onClick={handleMicrobitDialogOpen}\n              changeColorOnClick={false}\n            />\n          </label>\n        </Item>\n      </Stack>\n      {showFreenoveDialog()}\n      {showMicrobitDialog()}\n    </>\n  );\n};\n\nexport default PhysicalRobots;\n"],"names":["Item","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","props","useState","clicked","setClicked","onClick","e","label","sx","width","height","grayedOut","changeColorOnClick","image","gutterBottom","variant","component","mt","info","freenoveDialogOpen","setFreenoveDialogOpen","microbitDialogOpen","setMicrobitDialogOpen","navigate","useNavigate","handleFreenoveDialogClose","handleMicrobitDialogClose","genomeActions","align","p","direction","alignItems","justifyContent","m","htmlFor","size","open","onClose","href","autoFocus"],"sourceRoot":""}