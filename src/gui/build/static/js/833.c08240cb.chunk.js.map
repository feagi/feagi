{"version":3,"file":"static/js/833.c08240cb.chunk.js","mappings":"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","sources":["constants/genome.js","routes/GenomeAssembler.js","../node_modules/@mui/material/Stack/Stack.js"],"sourcesContent":["export const genomeBase = {\n  version: \"2.0\",\n  max_burst_count: 3,\n  burst_delay: 0.1,\n  evolution_burst_count: 50,\n  ipu_idle_threshold: 1000,\n  neuron_morphologies: {\n    block_to_block: {\n      vectors: [[0, 0, 0]],\n    },\n    decrease_filter_diagonal: {\n      vectors: [[0, 1, 1]],\n    },\n    decrease_filter_diagonal2: {\n      vectors: [[0, 2, 1]],\n    },\n    increase_filter_diagonal: {\n      vectors: [[0, 1, -1]],\n    },\n    increase_filter_diagonal2: {\n      vectors: [[0, 2, -1]],\n    },\n    y_consolidator: {\n      patterns: [\n        [\"*\", \"*\", \"*\"],\n        [\"*\", \"?\", \"*\"],\n      ],\n    },\n    \"lateral_+x\": {\n      vectors: [[1, 0, 0]],\n    },\n    \"lateral_-x\": {\n      vectors: [[-1, 0, 0]],\n    },\n    \"lateral_+y\": {\n      vectors: [[0, 1, 0]],\n    },\n    \"lateral_-y\": {\n      vectors: [[0, -1, 0]],\n    },\n    \"lateral_+z\": {\n      vectors: [[0, 0, 1]],\n    },\n    \"lateral_-z\": {\n      vectors: [[0, 0, -1]],\n    },\n    one_to_all: {\n      patterns: [\n        [1, 1, 1],\n        [\"*\", \"*\", \"*\"],\n      ],\n    },\n    all_to_one: {\n      patterns: [\n        [\"*\", \"*\", \"*\"],\n        [1, 1, 1],\n      ],\n    },\n    \"to_block_[5, 7, 4]\": {\n      patterns: [\n        [\"*\", \"*\", \"*\"],\n        [5, 7, 4],\n      ],\n    },\n    expander_x: {\n      functions: true,\n    },\n    reducer_x: {\n      functions: true,\n    },\n    randomizer: {\n      functions: true,\n    },\n    lateral_pairs_x: {\n      functions: true,\n    },\n  },\n  species: {\n    parents: {},\n    species_id: \"\",\n    class: \"toy\",\n    brand: \"gazebo\",\n    model: \"smart_car\",\n  },\n  blueprint: {},\n};\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GiBrainDump } from \"react-icons/gi\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport FeagiAPI from \"../services/FeagiAPI\";\nimport { genomeBase } from \"../constants/genome\";\n\nconst GenomeAssembler = (props) => {\n  const [loading, setLoading] = useState(false);\n  let navigate = useNavigate();\n\n  const matchMappings = (mappingData, corticalAreaData) => {\n    Object.keys(mappingData).forEach((key) => {\n      if (key in corticalAreaData) {\n        insertMappingData(mappingData, key, corticalAreaData);\n      }\n    });\n  };\n\n  const insertMappingData = (mappingData, targetKey, corticalAreaData) => {\n    Object.keys(corticalAreaData[targetKey]).forEach((subKey) => {\n      if (subKey.includes(\"-dstmap-d\")) {\n        for (let i = 0; i < mappingData[targetKey].length; i++) {\n          corticalAreaData[targetKey][subKey] = {\n            [mappingData[targetKey][i][\"dstArea\"]]: [\n              [\n                mappingData[targetKey][i][\"rule\"],\n                mappingData[targetKey][i][\"morphologyScalar\"],\n                mappingData[targetKey][i][\"pscMultiplier\"],\n                mappingData[targetKey][i][\"plasticity\"],\n              ],\n            ],\n          };\n        }\n      }\n    });\n  };\n\n  // const sleep = (ms) => {\n  //   return new Promise((resolve) => setTimeout(resolve, ms));\n  // };\n\n  // const burstCountPoller = async () => {\n  //   let bursting = false;\n  //   while (!bursting) {\n  //     const burstCount = await FeagiAPI.getBurstCount();\n  //     if (burstCount > 0) {\n  //       bursting = true;\n  //       navigate(\"/monitoring\");\n  //     }\n  //     await sleep(2000);\n  //   }\n  // };\n\n  const generateAndSendGenome = () => {\n    setLoading(true);\n\n    let mappingDataCopy = structuredClone(props.definedMappings);\n    let areaDataCopy = structuredClone(props.definedAreas);\n\n    matchMappings(mappingDataCopy, areaDataCopy);\n\n    let blueprintShell = {};\n    let areaDataVals = Object.values(areaDataCopy);\n\n    for (let i = 0; i < areaDataVals.length; i++) {\n      for (const key in areaDataVals[i]) {\n        blueprintShell[key] = areaDataVals[i][key];\n      }\n    }\n\n    genomeBase[\"blueprint\"] = blueprintShell;\n    FeagiAPI.postGenomeString({ genome: genomeBase });\n  };\n\n  return (\n    <Stack\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      spacing={12}\n      sx={{ mt: 24 }}\n    >\n      <GiBrainDump size={300} />\n      {loading ? (\n        <CircularProgress size=\"150px\" />\n      ) : (\n        <Button variant=\"contained\" onClick={generateAndSendGenome}>\n          CREATE GENOME AND START\n        </Button>\n      )}\n    </Stack>\n  );\n};\n\nexport default GenomeAssembler;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;"],"names":["genomeBase","version","max_burst_count","burst_delay","evolution_burst_count","ipu_idle_threshold","neuron_morphologies","block_to_block","vectors","decrease_filter_diagonal","decrease_filter_diagonal2","increase_filter_diagonal","increase_filter_diagonal2","y_consolidator","patterns","one_to_all","all_to_one","expander_x","functions","reducer_x","randomizer","lateral_pairs_x","species","parents","species_id","class","brand","model","blueprint","props","useState","loading","setLoading","insertMappingData","useNavigate","mappingData","targetKey","corticalAreaData","Object","keys","forEach","subKey","includes","i","length","direction","alignItems","justifyContent","spacing","sx","mt","size","variant","onClick","mappingDataCopy","structuredClone","definedMappings","areaDataCopy","definedAreas","key","blueprintShell","areaDataVals","values","FeagiAPI","genome","_excluded","joinChildren","children","separator","childrenArray","React","filter","Boolean","reduce","output","child","index","push","StackRoot","styled","name","slot","overridesResolver","styles","root","ownerState","theme","_extends","display","handleBreakpoints","resolveBreakpointValues","breakpoints","propValue","flexDirection","transformer","createUnarySpacing","base","acc","breakpoint","directionValues","spacingValues","deepmerge","margin","row","column","getValue","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as"],"sourceRoot":""}