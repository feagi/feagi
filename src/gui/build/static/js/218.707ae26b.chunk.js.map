{"version":3,"file":"static/js/218.707ae26b.chunk.js","mappings":"0IAGMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,eAAC,QAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzBC,QAASN,EAAMO,QAAQ,GACvBC,UAAW,SACXC,MAAOT,EAAME,QAAQQ,KAAKC,WALD,IAQ3B,K,8FCuCA,IA5CiB,SAACC,GAChB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OACE,gBAAKC,QAASJ,EAAMI,QAAU,SAACC,GAAD,OAAOL,EAAMI,QAAQC,EAAGL,EAAMM,MAA9B,EAAuC,KAArE,UACE,SAAC,IAAD,CACEF,QAPc,WAClBD,GAAYD,EACb,EAMKK,GAAI,CACFC,MAAO,QACPC,OAAQ,QACRpB,gBAAiBW,EAAMU,UACnB,YACCV,EAAMW,oBAENT,EAED,YAHA,MARR,UAcE,SAAC,IAAD,WACE,UAAC,IAAD,WACGF,EAAMY,OACP,SAAC,IAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,MACVR,GAAI,CAAES,GAAI,GAJZ,SAMGhB,EAAMM,SAET,SAAC,IAAD,CAAYQ,QAAQ,QAAQjB,MAAM,iBAAlC,SACGG,EAAMiB,eAOpB,C,mNCmHD,UAnJqB,SAACjB,GACpB,OAA4CC,EAAAA,EAAAA,UAAS,MAArD,eACA,GADA,WAC8CA,EAAAA,EAAAA,UAAS,OAAvD,eAEMiB,GAFN,UAE2B,SAACb,EAAGc,GAC7B,GAAKnB,EAAMoB,gBAAgBC,SAASF,GAG7B,CACL,IAAIG,EAAkBtB,EAAMoB,gBAAgBG,QAC1C,SAACC,GAAD,OAAUA,IAASL,CAAnB,IAEFnB,EAAMyB,mBAAmBH,EAC1B,KARyC,CACxC,IAAII,EAAc,kBAAO1B,EAAMoB,iBAAb,CAA8BD,IAChDnB,EAAMyB,mBAAmBC,EAC1B,CAMF,GAEKC,EAAmB,SAACtB,EAAGc,GAC3B,GAAKnB,EAAM4B,cAAcP,SAASF,GAG3B,CACL,IAAIU,EAAgB7B,EAAM4B,cAAcL,QAAO,SAACC,GAAD,OAAUA,IAASL,CAAnB,IAC/CnB,EAAM8B,iBAAiBD,EACxB,KANuC,CACtC,IAAIE,EAAY,kBAAO/B,EAAM4B,eAAb,CAA4BT,IAC5CnB,EAAM8B,iBAAiBC,EACxB,CAIF,EAEGC,GAAWC,EAAAA,EAAAA,MASf,OACE,iCACE,SAAC,IAAD,CACEnB,QAAQ,KACRoB,MAAM,SACN3B,GAAI,CAAE4B,EAAG,EAAGnB,GAAI,GAChBD,UAAU,MAJZ,6BAQA,UAAC,IAAD,CACEqB,UAAU,MACVC,WAAW,SACXC,eAAe,SACf3C,QAAS,EACTY,GAAI,CAAEgC,GAAI,GALZ,WAOE,SAAC,IAAD,WACE,SAAC,IAAD,CACE3B,OAAO,SAAC,MAAD,CAAS4B,KAAM,MACtBlC,MAAM,WACNF,QAASc,EACTP,oBAAoB,OAGxB,SAAC,IAAD,WACE,SAAC,IAAD,CACEC,OAAO,SAAC,MAAD,CAAS4B,KAAM,MACtBlC,MAAM,YACNF,QAASc,EACTP,oBAAoB,OAGxB,SAAC,IAAD,WACE,SAAC,IAAD,CACEC,OAAO,SAAC,MAAD,CAAqB4B,KAAM,MAClClC,MAAM,UACNF,QAASc,EACTP,oBAAoB,UAI1B,SAAC,IAAD,CACEG,QAAQ,KACRoB,MAAM,SACN3B,GAAI,CAAE4B,EAAG,EAAGnB,GAAI,IAChBD,UAAU,MAJZ,2BAQA,UAAC,IAAD,CACEqB,UAAU,MACVC,WAAW,SACXC,eAAe,SACf3C,QAAS,EACTY,GAAI,CAAEgC,GAAI,IALZ,WAOE,SAAC,IAAD,WACE,SAAC,IAAD,CACE3B,OAAO,SAAC,MAAD,CAAS4B,KAAM,MACtBlC,MAAM,QACNF,QAASuB,EACThB,oBAAoB,OAGxB,SAAC,IAAD,WACE,SAAC,IAAD,CACEC,OAAO,SAAC,MAAD,CAAY4B,KAAM,MACzBlC,MAAM,QACNF,QAASuB,EACThB,oBAAoB,UAI1B,UAAC,IAAD,CACEyB,UAAU,MACVC,WAAW,SACXC,eAAe,SACf3C,QAAS,EACTY,GAAI,CAAEgC,GAAI,GALZ,WAOE,SAAC,IAAD,CAASE,MAAM,OAAf,UACE,2BACE,SAAC,IAAD,CACED,KAAK,QACL3C,MAAM,UACN,aAAW,MACXU,GAAI,CAAEmC,EAAG,GACTtC,QA5FO,WACjB4B,EAAS,eACV,EAqFS,UAOE,SAAC,IAAD,WAIN,SAAC,IAAD,CAASS,MAAM,OAAf,UACE,2BACE,SAAC,IAAD,CACED,KAAK,QACL3C,MAAM,UACN,aAAW,MACXU,GAAI,CAAEmC,EAAG,GACTtC,QA7GO,WACjB4B,EAAS,gBACV,EAsGS,UAOE,SAAC,IAAD,eAOb,C","sources":["components/Item.js","components/MenuCard.js","routes/Sensorimotor.js"],"sourcesContent":["import { styled } from \"@mui/material/styles\";\nimport Paper from \"@mui/material/Paper\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default Item;\n","import React, { useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\n\nconst MenuCard = (props) => {\n  const [clicked, setClicked] = useState(false);\n\n  const handleClick = () => {\n    setClicked(!clicked);\n  };\n\n  return (\n    <div onClick={props.onClick ? (e) => props.onClick(e, props.label) : null}>\n      <Card\n        onClick={handleClick}\n        sx={{\n          width: \"260px\",\n          height: \"260px\",\n          backgroundColor: props.grayedOut\n            ? \"lightgray\"\n            : !props.changeColorOnClick\n            ? null\n            : !clicked\n            ? null\n            : \"lightblue\",\n        }}\n      >\n        <CardActionArea>\n          <CardContent>\n            {props.image}\n            <Typography\n              gutterBottom\n              variant=\"h5\"\n              component=\"div\"\n              sx={{ mt: 4 }}\n            >\n              {props.label}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {props.info}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </div>\n  );\n};\n\nexport default MenuCard;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Fab from \"@mui/material/Fab\";\nimport Stack from \"@mui/material/Stack\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport { FaRuler } from \"react-icons/fa\";\nimport { TiWaves } from \"react-icons/ti\";\nimport { MdBatteryCharging80 } from \"react-icons/md\";\nimport { GiGears } from \"react-icons/gi\";\nimport { BsGearWide } from \"react-icons/bs\";\nimport Item from \"../components/Item\";\nimport MenuCard from \"../components/MenuCard\";\n\nconst Sensorimotor = (props) => {\n  const [numberOfMotors, setNumberOfMotors] = useState(null);\n  const [numberOfSensors, setNumberOfSensors] = useState(null);\n\n  const handleSensoryClick = (e, src) => {\n    if (!props.selectedSensory.includes(src)) {\n      let updatedSensory = [...props.selectedSensory, src];\n      props.setSelectedSensory(updatedSensory);\n    } else {\n      let filteredSensory = props.selectedSensory.filter(\n        (item) => item !== src\n      );\n      props.setSelectedSensory(filteredSensory);\n    }\n  };\n\n  const handleMotorClick = (e, src) => {\n    if (!props.selectedMotor.includes(src)) {\n      let updatedMotor = [...props.selectedMotor, src];\n      props.setSelectedMotor(updatedMotor);\n    } else {\n      let filteredMotor = props.selectedMotor.filter((item) => item !== src);\n      props.setSelectedMotor(filteredMotor);\n    }\n  };\n\n  let navigate = useNavigate();\n  const handleNext = () => {\n    navigate(\"/brain/editor\");\n  };\n\n  const handleBack = () => {\n    navigate(\"/genome/mode\");\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n        sx={{ p: 4, mt: 8 }}\n        component=\"div\"\n      >\n        Select Sensory\n      </Typography>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={2}\n        sx={{ mb: 2 }}\n      >\n        <Item>\n          <MenuCard\n            image={<TiWaves size={150} />}\n            label=\"Infrared\"\n            onClick={handleSensoryClick}\n            changeColorOnClick={true}\n          />\n        </Item>\n        <Item>\n          <MenuCard\n            image={<FaRuler size={150} />}\n            label=\"Proximity\"\n            onClick={handleSensoryClick}\n            changeColorOnClick={true}\n          />\n        </Item>\n        <Item>\n          <MenuCard\n            image={<MdBatteryCharging80 size={150} />}\n            label=\"Battery\"\n            onClick={handleSensoryClick}\n            changeColorOnClick={true}\n          />\n        </Item>\n      </Stack>\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n        sx={{ p: 4, mt: 12 }}\n        component=\"div\"\n      >\n        Select Motor\n      </Typography>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={2}\n        sx={{ mb: 18 }}\n      >\n        <Item>\n          <MenuCard\n            image={<GiGears size={150} />}\n            label=\"Motor\"\n            onClick={handleMotorClick}\n            changeColorOnClick={true}\n          />\n        </Item>\n        <Item>\n          <MenuCard\n            image={<BsGearWide size={150} />}\n            label=\"Servo\"\n            onClick={handleMotorClick}\n            changeColorOnClick={true}\n          />\n        </Item>\n      </Stack>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={2}\n        sx={{ mb: 8 }}\n      >\n        <Tooltip title=\"Back\">\n          <span>\n            <Fab\n              size=\"large\"\n              color=\"primary\"\n              aria-label=\"add\"\n              sx={{ m: 1 }}\n              onClick={handleBack}\n            >\n              <ArrowBackIcon />\n            </Fab>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Next\">\n          <span>\n            <Fab\n              size=\"large\"\n              color=\"primary\"\n              aria-label=\"add\"\n              sx={{ m: 1 }}\n              onClick={handleNext}\n            >\n              <ArrowForwardIcon />\n            </Fab>\n          </span>\n        </Tooltip>\n      </Stack>\n    </>\n  );\n};\n\nexport default Sensorimotor;\n"],"names":["Item","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","props","useState","clicked","setClicked","onClick","e","label","sx","width","height","grayedOut","changeColorOnClick","image","gutterBottom","variant","component","mt","info","handleSensoryClick","src","selectedSensory","includes","filteredSensory","filter","item","setSelectedSensory","updatedSensory","handleMotorClick","selectedMotor","filteredMotor","setSelectedMotor","updatedMotor","navigate","useNavigate","align","p","direction","alignItems","justifyContent","mb","size","title","m"],"sourceRoot":""}