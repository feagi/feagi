{"version":3,"file":"static/js/195.9177898d.chunk.js","mappings":"yIAAO,IAAMA,EAAa,CACxBC,QAAS,MACTC,gBAAiB,EACjBC,YAAa,GACbC,sBAAuB,GACvBC,mBAAoB,IACpBC,oBAAqB,CACnBC,eAAgB,CACdC,QAAS,CAAC,CAAC,EAAG,EAAG,KAEnBC,yBAA0B,CACxBD,QAAS,CAAC,CAAC,EAAG,EAAG,KAEnBE,0BAA2B,CACzBF,QAAS,CAAC,CAAC,EAAG,EAAG,KAEnBG,yBAA0B,CACxBH,QAAS,CAAC,CAAC,EAAG,GAAI,KAEpBI,0BAA2B,CACzBJ,QAAS,CAAC,CAAC,EAAG,GAAI,KAEpBK,eAAgB,CACdC,SAAU,CACR,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,OAGf,aAAc,CACZN,QAAS,CAAC,CAAC,EAAG,EAAG,KAEnB,aAAc,CACZA,QAAS,CAAC,EAAE,EAAG,EAAG,KAEpB,aAAc,CACZA,QAAS,CAAC,CAAC,EAAG,EAAG,KAEnB,aAAc,CACZA,QAAS,CAAC,CAAC,GAAI,EAAG,KAEpB,aAAc,CACZA,QAAS,CAAC,CAAC,EAAG,EAAG,KAEnB,aAAc,CACZA,QAAS,CAAC,CAAC,EAAG,GAAI,KAEpBO,WAAY,CACVD,SAAU,CACR,CAAC,EAAG,EAAG,GACP,CAAC,IAAK,IAAK,OAGfE,WAAY,CACVF,SAAU,CACR,CAAC,IAAK,IAAK,KACX,CAAC,EAAG,EAAG,KAGX,qBAAsB,CACpBA,SAAU,CACR,CAAC,IAAK,IAAK,KACX,CAAC,EAAG,EAAG,KAGXG,WAAY,CACVC,WAAW,GAEbC,UAAW,CACTD,WAAW,GAEbE,WAAY,CACVF,WAAW,GAEbG,gBAAiB,CACfH,WAAW,IAGfI,QAAS,CACPC,QAAS,CAAC,EACVC,WAAY,GACZC,MAAO,MACPC,MAAO,SACPC,MAAO,aAETC,UAAW,CAAC,E,gfC8Id,EAxN6B,SAACC,GAC5B,OAAoCC,EAAAA,EAAAA,UAASD,EAAME,cAAnD,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCH,EAAAA,EAAAA,UAAS,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KACA,GAA4CL,EAAAA,EAAAA,UAAS,IAArD,eAAOM,EAAP,KAAuBC,EAAvB,KACA,GAA4CP,EAAAA,EAAAA,UAAS,IAArD,eAAOQ,EAAP,KAAuBC,EAAvB,KACA,GAA4CT,EAAAA,EAAAA,UAAS,IAArD,eAAOU,EAAP,KAAuBC,EAAvB,KACA,GAA8CX,EAAAA,EAAAA,UAAS,IAAvD,eAAOY,EAAP,KAAwBC,EAAxB,KACA,GAA8Cb,EAAAA,EAAAA,UAAS,IAAvD,eAAOc,EAAP,KAAwBC,EAAxB,KACA,GAA8Cf,EAAAA,EAAAA,UAAS,IAAvD,eAAOgB,EAAP,KAAwBC,EAAxB,KAEMC,EAAe,CAAC,EACtBC,OAAOC,KAAKrB,EAAMsB,sBAAsBC,SAAQ,SAACC,GAC/CL,EAAanB,EAAMsB,qBAAqBE,GAAK,IAC3CxB,EAAMsB,qBAAqBE,GAAK,EACnC,IAkDD,OACE,iCACE,UAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAMC,GAAI,CAAEC,GAAI,GAAhE,UACG9B,EAAME,aADT,gCAGA,SAAC6B,EAAA,EAAD,CAASF,GAAI,CAAEC,GAAI,MACnB,UAACE,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,QAAS,EAAGN,GAAI,CAAEO,EAAG,GAAhE,WACE,SAACC,EAAA,EAAD,CAAYR,GAAI,CAAES,MAAO,QAAzB,oBACA,SAACC,EAAA,EAAD,CACEC,GAAG,qBACHC,MAAM,wBACNC,aAAc1C,EAAME,aACpByB,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAAOxC,EAAcwC,EAAEC,OAAOC,MAA9B,EACVjB,GAAI,CAAES,MAAO,eAGjB,UAACN,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,QAAS,EAAGN,GAAI,CAAEO,EAAG,GAAhE,WACE,SAACC,EAAA,EAAD,CAAYR,GAAI,CAAES,MAAO,QAAzB,uBACA,SAACC,EAAA,EAAD,CACEC,GAAG,wBACHC,MAAM,aACNd,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAAOtC,EAAgBsC,EAAEC,OAAOC,MAAhC,EACVjB,GAAI,CAAES,MAAO,SACbS,WAAY,CACVC,UAAW,SAIjB,UAAChB,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,QAAS,EAAGN,GAAI,CAAEO,EAAG,GAAhE,WACE,SAACC,EAAA,EAAD,CAAYR,GAAI,CAAES,MAAO,QAAzB,uBACA,SAACC,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAAOpC,EAAkBoC,EAAEC,OAAOC,MAAlC,EACVjB,GAAI,CAAES,MAAO,YAEf,SAACC,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAAOlC,EAAkBkC,EAAEC,OAAOC,MAAlC,EACVjB,GAAI,CAAES,MAAO,YAEf,SAACC,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAAOhC,EAAkBgC,EAAEC,OAAOC,MAAlC,EACVjB,GAAI,CAAES,MAAO,eAGjB,UAACN,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,QAAS,EAAGN,GAAI,CAAEO,EAAG,GAAhE,WACE,SAACC,EAAA,EAAD,CAAYR,GAAI,CAAES,MAAO,QAAzB,wBACA,SAACC,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAAO9B,EAAmB8B,EAAEC,OAAOC,MAAnC,EACVjB,GAAI,CAAES,MAAO,YAEf,SAACC,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAAO5B,EAAmB4B,EAAEC,OAAOC,MAAnC,EACVjB,GAAI,CAAES,MAAO,YAEf,SAACC,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAAO1B,EAAmB0B,EAAEC,OAAOC,MAAnC,EACVjB,GAAI,CAAES,MAAO,eAGjB,SAACb,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,MACVC,GAAI,CAAEoB,eAAgB,SAAUC,GAAI,EAAGpB,GAAI,GAJ7C,mDAQA,SAACC,EAAA,EAAD,CAASF,GAAI,CAAEC,GAAI,KAClBV,OAAOC,KAAKrB,EAAMsB,sBAAsB6B,KAAI,SAAC3B,EAAK4B,GACjD,OACE,UAACpB,EAAA,EAAD,CAEEC,UAAU,MACVC,WAAW,SACXC,QAAS,EACTN,GAAI,CAAEO,EAAG,GALX,WAOE,SAACC,EAAA,EAAD,CAAmCR,GAAI,CAAES,MAAO,SAAhD,SACGd,GADH,gBAA0B4B,KAG1B,SAACb,EAAA,EAAD,CAEEC,GAAE,uBAAkBY,GACpBX,MAAOzC,EAAMsB,qBAAqBE,GAAK,GACvCkB,aAAc1C,EAAMsB,qBAAqBE,GAAK,GAC9CG,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAtHSS,EAwHfT,EAAEC,OAAOC,MAxHaQ,EAyHtBtD,EAAMsB,qBAAqBE,GAAK,QAxH9CL,EAAamC,GAAQD,GADO,IAACA,EAAOC,CAsHhB,EAMVzB,GAAI,CAAES,MAAO,UAZf,gBACgBc,MAXlB,gBACgBA,GAyBnB,KACD,SAACpB,EAAA,EAAD,CACEC,UAAU,MACVC,WAAW,SACXe,eAAe,SACfd,QAAS,EACTN,GAAI,CAAEO,EAAG,GALX,UAOE,SAACmB,EAAA,EAAD,CAASC,MAAM,OAAf,UACE,2BACE,SAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACN,aAAW,MACX9B,GAAI,CAAEO,EAAG,GACTwB,WAEIzD,GACAI,GACAE,GACAE,GACAE,GACAE,GACAE,GAGJ4C,QAtJO,WACjB,IAAMC,EAxCyB,WAAO,IAAD,EAC/BC,EAAU,mBAAe1D,EAAf,KAEV2D,EAAYD,EAAWE,OAAO,eAE9BC,EAAgBH,EAAWE,OAAO,eAClCE,EAAgBJ,EAAWE,OAAO,eAClCG,EAAgBL,EAAWE,OAAO,eAElCI,EAAiBN,EAAWE,OAAO,eACnCK,EAAiBP,EAAWE,OAAO,eACnCM,EAAiBR,EAAWE,OAAO,eAEnCO,EAAcT,EAAWE,OAAO,eAElCQ,EAAuB,CAAC,EAiB5B,OAhBArD,OAAOC,KAAKF,GAAcI,SAAQ,SAACC,GACjCiD,EAAqBV,EAAWE,OAAOzC,IAAQL,EAAaK,EAC7D,KAEkB,uBAChBwC,EAAY7D,IADI,SAEhB+D,EAAgBQ,SAASnE,KAFT,SAGhB4D,EAAgBO,SAASjE,KAHT,SAIhB2D,EAAgBM,SAAS/D,KAJT,SAKhB0D,EAAiBK,SAAS7D,KALV,SAMhByD,EAAiBI,SAAS3D,KANV,SAOhBwD,EAAiBG,SAASzD,KAPV,SAQhBuD,EAAc,CAAC,GARC,GASdC,EAIN,CAOqBE,GACpB3E,EAAM4E,iBAAN,kBACK5E,EAAM6E,cADX,cAEG7E,EAAME,aAAe4D,KAExB9D,EAAM8E,eAAc,EACrB,EA+HS,UAkBE,SAACC,EAAA,EAAD,cAOb,E,oBC9LKC,GAAQC,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CAC5BC,QAAS,SA0cX,EAvc2B,SAAClF,GAC1B,OAAsCC,EAAAA,EAAAA,UAAS,GAAD,eACzCD,EAAMmF,kBADmC,OAEzCnF,EAAMoF,gBAFmC,OAGzCpF,EAAMqF,eAHX,eAAOC,EAAP,KAAoBC,EAApB,KAKA,GAAsCtF,EAAAA,EAAAA,WAAS,GAA/C,eAAOuF,EAAP,KAAoBC,EAApB,KACA,GAAoCxF,EAAAA,EAAAA,UAAS,IAA7C,eAAOyF,EAAP,KAAmBC,EAAnB,KACA,GAAsC1F,EAAAA,EAAAA,UAAS,IAA/C,gBAAO2F,GAAP,MAAoBC,GAApB,MACA,IAAwB5F,EAAAA,EAAAA,UAAS,GAAjC,iBAAO6F,GAAP,MAAaC,GAAb,MACA,IAA0C9F,EAAAA,EAAAA,UAAS,IAAnD,iBAAO+F,GAAP,MAAsBC,GAAtB,MACA,IAA0DhG,EAAAA,EAAAA,WAAS,GAAnE,iBAAOiG,GAAP,MAA8BC,GAA9B,MAuBMC,GAAwB,WAC5BX,GAAe,EAChB,EAeGY,IAAWC,EAAAA,EAAAA,MAkBTC,GAA4B,WAChChB,EAAe,GAAD,eAAKD,GAAL,CAAkBU,MAChChG,EAAMwG,eAAN,kBAAyBxG,EAAMqF,aAA/B,CAA4CW,MAC5CG,IAAyB,EAC1B,EAEKM,GAA2B,WAC/BN,IAAyB,EAC1B,EAMKO,GAAkB,mCAAG,WAAOrD,GAAP,uGACIsD,EAAAA,EAAAA,mBAA4B,CACvDC,KAAMvD,EAAMR,OAAOgE,MAAM,KAFF,OACnBC,EADmB,OAKnBC,EAAkBD,EAAc,UAElCE,EAAc,CAAC,EACfC,EAAiB,CAAC,EAChBC,EAAsB9F,OAAO+F,QAAQJ,GAAiBK,QAAO,SAAC9D,GAAD,OACjEA,EAAK,GAAG+D,SAAS,QADgD,IAT1C,UAaEH,GAbF,IAazB,2BAAWI,EAAqC,QAC9CN,EAAYD,EAAgBO,EAAa,KAAO,CAAC,EACjDL,EAAeK,EAAa,GAAGC,MAAM,EAAG,KAAOD,EAAa,EAfrC,+BAkBzB,IAAWhE,KAAQyD,EACjBC,EAAYC,EAAe3D,EAAKiE,MAAM,EAAG,MAAMjE,GAC7CyD,EAAgBzD,GAGpBiC,EAAenE,OAAOC,KAAK2F,IAC3BhH,EAAM4E,gBAAgBoC,GAxBG,4CAAH,sDAwFxB,OACE,iCACE,SAACvF,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,MAAMC,GAAI,CAAEqB,GAAI,EAAGsE,GAAI,EAAG1F,GAAI,GAAjE,yCAGA,UAAC2F,EAAA,EAAD,CAAgB7F,UAAW8F,EAAAA,EAAO7F,GAAI,CAAEqB,GAAI,QAA5C,WACE,UAACyE,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAW/F,GAAI,CAAEgG,gBAAiB,aAAlC,UACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,UACG,SAACvG,EAAA,EAAD,CAAYE,QAAQ,KAApB,qBAEH,SAACoG,EAAA,EAAD,CAAWC,MAAM,OAAjB,UACG,SAACvG,EAAA,EAAD,CAAYE,QAAQ,KAApB,2BAEH,SAACoG,EAAA,EAAD,CAAWC,MAAM,OAAjB,UACG,SAACvG,EAAA,EAAD,CAAYE,QAAQ,KAApB,yBAEH,SAACoG,EAAA,EAAD,CAAWC,MAAM,SAAjB,UACG,SAACvG,EAAA,EAAD,CAAYE,QAAQ,KAApB,gCAIP,SAACsG,EAAA,EAAD,UACG3C,EACEiC,MAAMzB,GAAOF,GAAaE,GAAOF,GAAcA,IAC/CzC,KAAI,SAAC+E,EAAM9E,GAAP,OACH,UAAC0E,EAAA,EAAD,CAAUK,OAAK,EAAf,WACE,SAACJ,EAAA,EAAD,CACEC,MAAM,SACNpG,UAAU,KACVwG,MAAM,MACNC,MAAO,CAAE/F,MAAO,SAJlB,UAMG,SAACb,EAAA,EAAD,UAAayG,OAEhB,SAACH,EAAA,EAAD,CAAWM,MAAO,CAAE/F,MAAO,SAA3B,UAEI,UAACN,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,QAAS,EAApD,WACE,SAACI,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRiC,UAAQ,EACRd,MACEoF,KAAQlI,EAAM6E,aACV7E,EAAM6E,aAAaqD,GACjB9G,OAAOC,KAAKrB,EAAM6E,aAAaqD,IAAOd,QACpC,SAAC5F,GAAD,OAASA,EAAI6F,SAAS,MAAtB,IACA,IAEJ,OAENxF,GAAI,CAAES,MAAO,QACbgG,WAAY,CACVvF,WAAY,CACVsF,MAAO,CAAEE,UAAW,eAI1B,SAAChG,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRiC,UAAQ,EACRd,MACEoF,KAAQlI,EAAM6E,aACV7E,EAAM6E,aAAaqD,GACjB9G,OAAOC,KAAKrB,EAAM6E,aAAaqD,IAAOd,QACpC,SAAC5F,GAAD,OAASA,EAAI6F,SAAS,MAAtB,IACA,IAEJ,OAENxF,GAAI,CAAES,MAAO,QACbgG,WAAY,CACVvF,WAAY,CACVsF,MAAO,CAAEE,UAAW,eAI1B,SAAChG,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRiC,UAAQ,EACRd,MACEoF,KAAQlI,EAAM6E,aACV7E,EAAM6E,aAAaqD,GACjB9G,OAAOC,KAAKrB,EAAM6E,aAAaqD,IAAOd,QACpC,SAAC5F,GAAD,OAASA,EAAI6F,SAAS,MAAtB,IACA,IAEJ,OAENxF,GAAI,CAAES,MAAO,QACbgG,WAAY,CACVvF,WAAY,CACVsF,MAAO,CAAEE,UAAW,oBAOhC,SAACR,EAAA,EAAD,CAAWC,MAAM,SAASK,MAAO,CAAE/F,MAAO,SAA1C,UAEI,UAACN,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,QAAS,EAApD,WACE,SAACI,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRiC,UAAQ,EACRd,MACEoF,KAAQlI,EAAM6E,aACV7E,EAAM6E,aAAaqD,GACjB9G,OAAOC,KAAKrB,EAAM6E,aAAaqD,IAAOd,QACpC,SAAC5F,GAAD,OAASA,EAAI6F,SAAS,SAAtB,IACA,IAEJ,OAENxF,GAAI,CAAES,MAAO,QACbgG,WAAY,CACVvF,WAAY,CACVsF,MAAO,CAAEE,UAAW,eAI1B,SAAChG,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRiC,UAAQ,EACRd,MACEoF,KAAQlI,EAAM6E,aACV7E,EAAM6E,aAAaqD,GACjB9G,OAAOC,KAAKrB,EAAM6E,aAAaqD,IAAOd,QACpC,SAAC5F,GAAD,OAASA,EAAI6F,SAAS,SAAtB,IACA,IAEJ,OAENxF,GAAI,CAAES,MAAO,QACbgG,WAAY,CACVvF,WAAY,CACVsF,MAAO,CAAEE,UAAW,eAI1B,SAAChG,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,IACNd,QAAQ,SACRiC,UAAQ,EACRd,MACEoF,KAAQlI,EAAM6E,aACV7E,EAAM6E,aAAaqD,GACjB9G,OAAOC,KAAKrB,EAAM6E,aAAaqD,IAAOd,QACpC,SAAC5F,GAAD,OAASA,EAAI6F,SAAS,SAAtB,IACA,IAEJ,OAENxF,GAAI,CAAES,MAAO,QACbgG,WAAY,CACVvF,WAAY,CACVsF,MAAO,CAAEE,UAAW,oBAOhC,SAACR,EAAA,EAAD,CAAWC,MAAM,SAAjB,UAEI,iCACE,SAACvE,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACN,aAAW,WACX9B,GAAI,CAAEO,EAAG,GACTyB,QAAS,kBApUV,SAACqE,GACtBvC,EAAcuC,GACdzC,GAAe,EAChB,CAiUsC+C,CAAeN,EAArB,EALX,UAOE,SAACO,EAAA,EAAD,OAEF,SAAChF,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACN,aAAW,cACX9B,GAAI,CAAEO,EAAG,GACTyB,QAAS,kBA7VR,SAACqE,EAAM9E,GAC9B,IAAIsF,EAAiBtF,EAAQ0C,GAAOF,GAChC+C,GAAY,OAAOrD,GAGvB,GAFAqD,EAAaC,OAAOF,EAAgB,GACpCnD,EAAeoD,GACXT,KAAQlI,EAAM6E,aAAc,CAC9B,IAAIgE,GAAmB,UAAQ7I,EAAM6E,qBAC9BgE,EAAoBX,GAC3BlI,EAAM4E,gBAAgBiE,EACvB,CACF,CAmVsCC,CAAiBZ,EAAM9E,EAA7B,EALX,UAOE,SAAC2F,EAAA,EAAD,aAtKW3F,EADlB,UAgLX,SAACK,EAAA,EAAD,CACEC,KAAK,SACLC,MAAM,UACN,aAAW,MACX9B,GAAI,CAAEqB,GAAI,EAAGsE,GAAI,EAAGwB,GAAI,EAAGlH,GAAI,GAC/B+B,QAjWc,WACpBsC,IAAyB,EAC1B,EA0VK,UAOE,SAAC8C,EAAA,EAAD,OAEF,SAACxF,EAAA,EAAD,CACEC,KAAK,SACLC,MAAM,UACN,aAAW,OACX9B,GAAI,CAAEqB,GAAI,EAAGsE,GAAI,EAAGwB,GAAI,EAAGlH,GAAI,GAC/B8B,UAAW5D,EAAM6E,aACjBhB,QA9VW,WACjB,IAAIqF,EAAS/K,EAAAA,EACTgL,EAAiB,CAAC,EACtB,IAAK,IAAMjB,KAAQlI,EAAM6E,aACvB,IAAK,IAAMvB,KAAQtD,EAAM6E,aAAaqD,GACpCiB,EAAe7F,GAAQtD,EAAM6E,aAAaqD,GAAM5E,GAGpD4F,EAAM,UAAgBC,EACtB,IAAMC,EAAQ,iBAAaC,KAAKC,MAAlB,SACdC,IAAaC,KAAKC,UAAUP,GAASE,EACtC,EA6UK,UAQE,SAACM,EAAA,EAAD,OAEF,mBAAOC,QAAQ,gBAAf,WACE,SAAC3E,EAAD,CACExC,GAAG,gBACHoH,OAAO,QACPC,KAAK,OACLlH,SAAU+D,GACV7C,QA/Te,SAACR,GACxBA,EAAMR,OAAOC,MAAQ,EACtB,KA+TO,SAACW,EAAA,EAAD,CACEjB,GAAG,gBACHZ,UAAU,OACV8B,KAAK,SACLC,MAAM,UACN9B,GAAI,CAAEqB,GAAI,EAAGsE,GAAI,EAAGwB,GAAI,EAAGlH,GAAI,GALjC,UAOE,SAACgI,EAAA,EAAD,UAGJ,SAACC,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,KACpCpI,UAAU,MACVqI,MAAO3E,EAAY4E,OACnBtE,YAAalB,SAASkB,GAAa,IACnCE,KAAMA,GACNqE,aApWiB,SAAC9G,EAAO+G,GAC/BrE,GAAQqE,EACT,EAmWOC,oBAjWwB,SAAChH,GAC/BwC,GAAenB,SAASrB,EAAMR,OAAOC,MAAO,KAC5CiD,GAAQ,EACT,QAiWG,UAAC/D,EAAA,EAAD,CACEC,UAAU,MACVC,WAAW,SACXe,eAAe,SACfd,QAAS,EACTN,GAAI,CAAEO,EAAG,GALX,WAOE,SAACqB,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACN,aAAW,MACX9B,GAAI,CAAEO,EAAG,GACTyB,QAxXW,WACjBwC,GAAS,sBACV,EAiXK,UAOE,SAACiE,EAAA,EAAD,OAEF,SAAC7G,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACN,aAAW,MACX9B,GAAI,CAAEO,EAAG,GACTwB,SACExC,OAAOC,KAAKrB,EAAM6E,cAAcqF,SAAW5E,EAAY4E,OAEzDrG,QAxYW,WACjBwC,GAAS,iBACV,EA8XK,UAUE,SAACkE,EAAA,EAAD,SAGH/E,IAjVD,SAACgF,EAAA,EAAD,CACEC,KAAMjF,EACNkF,QAAStE,GACTuE,WAAS,EACTC,SAAS,KAJX,UAME,SAACC,EAAA,EAAD,WACE,SAAC,EAAD,CACE/F,cAAeW,EACfqF,eAAgB9K,EAAM8K,eACtBC,kBAAmB/K,EAAM+K,kBACzBC,aAAchL,EAAMgL,aACpBC,gBAAiBjL,EAAMiL,gBACvBpG,aAAc7E,EAAM6E,aACpBD,gBAAiB5E,EAAM4E,gBACvBtD,qBAAsBtB,EAAMsB,qBAC5BpB,aAAcwF,QAkUnBQ,KAzTD,SAACsE,EAAA,EAAD,CAAQC,KAAMvE,GAAuByE,WAAS,EAACC,SAAS,KAAxD,UACE,UAACC,EAAA,EAAD,YACE,gBAAKxC,MAAO,CAAEnD,QAAS,OAAQjC,eAAgB,YAA/C,UACE,SAACiI,EAAA,EAAD,CAAYrJ,GAAI,CAAEC,GAAI,GAAK+B,QAAS4C,GAApC,UACE,SAAC0E,EAAA,EAAD,SAGJ,UAACnJ,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,QAAS,EAAGN,GAAI,CAAEO,EAAG,GAAhE,WACE,SAACC,EAAA,EAAD,CAAYR,GAAI,CAAES,MAAO,SAAzB,UACE,UAACb,EAAA,EAAD,CAAY2J,WAAW,OAAvB,gDACsC,UAGxC,SAAC7I,EAAA,EAAD,CACEC,GAAG,eACHb,QAAQ,SACRgB,SAAU,SAACC,GAAD,OAAOqD,GAAiBrD,EAAEC,OAAOC,MAAjC,EACVjB,GAAI,CAAES,MAAO,eAGjB,SAAC+I,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CACE3J,QAAQ,YACRkC,QAAS0C,GACT3C,UAAWoC,GAHb,yBAuSX,C","sources":["constants/genome.js","components/CorticalAreaEditForm.js","routes/CorticalAreaEditor.js"],"sourcesContent":["export const genomeBase = {\n  version: \"2.0\",\n  max_burst_count: 3,\n  burst_delay: 0.1,\n  evolution_burst_count: 50,\n  ipu_idle_threshold: 1000,\n  neuron_morphologies: {\n    block_to_block: {\n      vectors: [[0, 0, 0]],\n    },\n    decrease_filter_diagonal: {\n      vectors: [[0, 1, 1]],\n    },\n    decrease_filter_diagonal2: {\n      vectors: [[0, 2, 1]],\n    },\n    increase_filter_diagonal: {\n      vectors: [[0, 1, -1]],\n    },\n    increase_filter_diagonal2: {\n      vectors: [[0, 2, -1]],\n    },\n    y_consolidator: {\n      patterns: [\n        [\"*\", \"*\", \"*\"],\n        [\"*\", \"?\", \"*\"],\n      ],\n    },\n    \"lateral_+x\": {\n      vectors: [[1, 0, 0]],\n    },\n    \"lateral_-x\": {\n      vectors: [[-1, 0, 0]],\n    },\n    \"lateral_+y\": {\n      vectors: [[0, 1, 0]],\n    },\n    \"lateral_-y\": {\n      vectors: [[0, -1, 0]],\n    },\n    \"lateral_+z\": {\n      vectors: [[0, 0, 1]],\n    },\n    \"lateral_-z\": {\n      vectors: [[0, 0, -1]],\n    },\n    one_to_all: {\n      patterns: [\n        [1, 1, 1],\n        [\"*\", \"*\", \"*\"],\n      ],\n    },\n    all_to_one: {\n      patterns: [\n        [\"*\", \"*\", \"*\"],\n        [1, 1, 1],\n      ],\n    },\n    \"to_block_[5, 7, 4]\": {\n      patterns: [\n        [\"*\", \"*\", \"*\"],\n        [5, 7, 4],\n      ],\n    },\n    expander_x: {\n      functions: true,\n    },\n    reducer_x: {\n      functions: true,\n    },\n    randomizer: {\n      functions: true,\n    },\n    lateral_pairs_x: {\n      functions: true,\n    },\n  },\n  species: {\n    parents: {},\n    species_id: \"\",\n    class: \"toy\",\n    brand: \"gazebo\",\n    model: \"smart_car\",\n  },\n  blueprint: {},\n};\n","import React, { useState } from \"react\";\nimport Divider from \"@mui/material/Divider\";\nimport Fab from \"@mui/material/Fab\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\nconst CorticalAreaEditForm = (props) => {\n  const [labelValue, setLabelValue] = useState(props.corticalArea);\n  const [groupIdValue, setGroupIdValue] = useState(\"\");\n  const [positionXValue, setPositionXValue] = useState(\"\");\n  const [positionYValue, setPositionYValue] = useState(\"\");\n  const [positionZValue, setPositionZValue] = useState(\"\");\n  const [dimensionXValue, setDimensionXValue] = useState(\"\");\n  const [dimensionYValue, setDimensionYValue] = useState(\"\");\n  const [dimensionZValue, setDimensionZValue] = useState(\"\");\n\n  const defaultGenes = {};\n  Object.keys(props.defaultCorticalGenes).forEach((key) => {\n    defaultGenes[props.defaultCorticalGenes[key][0]] =\n      props.defaultCorticalGenes[key][1];\n  });\n\n  const assembleCorticalAreaData = () => {\n    const genePrefix = `_____10c-${groupIdValue}-`;\n\n    const labelGene = genePrefix.concat(\"cx-__name-t\");\n\n    const positionXGene = genePrefix.concat(\"nx-rcordx-i\");\n    const positionYGene = genePrefix.concat(\"nx-rcordy-i\");\n    const positionZGene = genePrefix.concat(\"nx-rcordz-i\");\n\n    const dimensionXGene = genePrefix.concat(\"nx-___bbx-i\");\n    const dimensionYGene = genePrefix.concat(\"nx-___bby-i\");\n    const dimensionZGene = genePrefix.concat(\"nx-___bbz-i\");\n\n    const mappingGene = genePrefix.concat(\"cx-dstmap-d\");\n\n    let prefixedDefaultGenes = {};\n    Object.keys(defaultGenes).forEach((key) => {\n      prefixedDefaultGenes[genePrefix.concat(key)] = defaultGenes[key];\n    });\n\n    const prefixedGenes = {\n      [labelGene]: labelValue,\n      [positionXGene]: parseInt(positionXValue),\n      [positionYGene]: parseInt(positionYValue),\n      [positionZGene]: parseInt(positionZValue),\n      [dimensionXGene]: parseInt(dimensionXValue),\n      [dimensionYGene]: parseInt(dimensionYValue),\n      [dimensionZGene]: parseInt(dimensionZValue),\n      [mappingGene]: {},\n      ...prefixedDefaultGenes,\n    };\n\n    return prefixedGenes;\n  };\n\n  const handleGeneValueChange = (event, gene) => {\n    defaultGenes[gene] = event;\n  };\n\n  const handleSave = () => {\n    const definedArea = assembleCorticalAreaData();\n    props.setDefinedAreas({\n      ...props.definedAreas,\n      [props.corticalArea]: definedArea,\n    });\n    props.setDialogOpen(false);\n  };\n\n  return (\n    <>\n      <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ mb: 1 }}>\n        {props.corticalArea} cortical area properties\n      </Typography>\n      <Divider sx={{ mb: 2 }} />\n      <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ m: 1 }}>\n        <InputLabel sx={{ width: \"80px\" }}>Label</InputLabel>\n        <TextField\n          id=\"filled-basic-label\"\n          label=\"cortical area name...\"\n          defaultValue={props.corticalArea}\n          variant=\"filled\"\n          onChange={(e) => setLabelValue(e.target.value)}\n          sx={{ width: \"330px\" }}\n        />\n      </Stack>\n      <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ m: 1 }}>\n        <InputLabel sx={{ width: \"80px\" }}>Group ID</InputLabel>\n        <TextField\n          id=\"filled-basic-group-id\"\n          label=\"6 char max\"\n          variant=\"filled\"\n          onChange={(e) => setGroupIdValue(e.target.value)}\n          sx={{ width: \"330px\" }}\n          inputProps={{\n            maxLength: 6,\n          }}\n        />\n      </Stack>\n      <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ m: 1 }}>\n        <InputLabel sx={{ width: \"80px\" }}>Position</InputLabel>\n        <TextField\n          id=\"filled-basic-px\"\n          label=\"X\"\n          variant=\"filled\"\n          onChange={(e) => setPositionXValue(e.target.value)}\n          sx={{ width: \"100px\" }}\n        />\n        <TextField\n          id=\"filled-basic-py\"\n          label=\"Y\"\n          variant=\"filled\"\n          onChange={(e) => setPositionYValue(e.target.value)}\n          sx={{ width: \"100px\" }}\n        />\n        <TextField\n          id=\"filled-basic-pz\"\n          label=\"Z\"\n          variant=\"filled\"\n          onChange={(e) => setPositionZValue(e.target.value)}\n          sx={{ width: \"100px\" }}\n        />\n      </Stack>\n      <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ m: 1 }}>\n        <InputLabel sx={{ width: \"80px\" }}>Dimension</InputLabel>\n        <TextField\n          id=\"filled-basic-dx\"\n          label=\"X\"\n          variant=\"filled\"\n          onChange={(e) => setDimensionXValue(e.target.value)}\n          sx={{ width: \"100px\" }}\n        />\n        <TextField\n          id=\"filled-basic-dy\"\n          label=\"Y\"\n          variant=\"filled\"\n          onChange={(e) => setDimensionYValue(e.target.value)}\n          sx={{ width: \"100px\" }}\n        />\n        <TextField\n          id=\"filled-basic-dz\"\n          label=\"Z\"\n          variant=\"filled\"\n          onChange={(e) => setDimensionZValue(e.target.value)}\n          sx={{ width: \"100px\" }}\n        />\n      </Stack>\n      <Typography\n        gutterBottom\n        variant=\"h6\"\n        component=\"div\"\n        sx={{ justifyContent: \"center\", mt: 4, mb: 1 }}\n      >\n        Neuron Parameters (advanced options)\n      </Typography>\n      <Divider sx={{ mb: 2 }} />\n      {Object.keys(props.defaultCorticalGenes).map((key, index) => {\n        return (\n          <Stack\n            key={`stack-${index}`}\n            direction=\"row\"\n            alignItems=\"center\"\n            spacing={2}\n            sx={{ m: 1 }}\n          >\n            <InputLabel key={`input-${index}`} sx={{ width: \"250px\" }}>\n              {key}\n            </InputLabel>\n            <TextField\n              key={`field-${index}`}\n              id={`filled-basic-${index}`}\n              label={props.defaultCorticalGenes[key][0]}\n              defaultValue={props.defaultCorticalGenes[key][1]}\n              variant=\"filled\"\n              onChange={(e) =>\n                handleGeneValueChange(\n                  e.target.value,\n                  props.defaultCorticalGenes[key][0]\n                )\n              }\n              sx={{ width: \"150px\" }}\n            />\n          </Stack>\n        );\n      })}\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={2}\n        sx={{ m: 2 }}\n      >\n        <Tooltip title=\"Save\">\n          <span>\n            <Fab\n              size=\"large\"\n              color=\"primary\"\n              aria-label=\"add\"\n              sx={{ m: 1 }}\n              disabled={\n                !(\n                  labelValue &&\n                  positionXValue &&\n                  positionYValue &&\n                  positionZValue &&\n                  dimensionXValue &&\n                  dimensionYValue &&\n                  dimensionZValue\n                )\n              }\n              onClick={handleSave}\n            >\n              <SaveIcon />\n            </Fab>\n          </span>\n        </Tooltip>\n      </Stack>\n    </>\n  );\n};\n\nexport default CorticalAreaEditForm;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Button from \"@mui/material/Button\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport Fab from \"@mui/material/Fab\";\nimport fileDownload from \"js-file-download\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport UploadIcon from \"@mui/icons-material/Upload\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport CorticalAreaEditForm from \"../components/CorticalAreaEditForm\";\nimport { genomeBase } from \"../constants/genome\";\nimport FeagiAPI from \"../services/FeagiAPI\";\n\nconst Input = styled(\"input\")({\n  display: \"none\",\n});\n\nconst CorticalAreaEditor = (props) => {\n  const [listedAreas, setListedAreas] = useState([\n    ...props.selectedSensory,\n    ...props.selectedMotor,\n    ...props.customAreas,\n  ]);\n  const [formVisible, setFormVisible] = useState(false);\n  const [activeArea, setActiveArea] = useState(\"\");\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [addedAreaName, setAddedAreaName] = useState(\"\");\n  const [areaNameDialogVisible, setAreaNameDialogVisible] = useState(false);\n\n  const handleAreaDelete = (area, index) => {\n    let paginatedIndex = index + page * rowsPerPage;\n    let updatedAreas = [...listedAreas];\n    updatedAreas.splice(paginatedIndex, 1);\n    setListedAreas(updatedAreas);\n    if (area in props.definedAreas) {\n      let updatedDefinedAreas = { ...props.definedAreas };\n      delete updatedDefinedAreas[area];\n      props.setDefinedAreas(updatedDefinedAreas);\n    }\n  };\n\n  const handleAreaAdd = () => {\n    setAreaNameDialogVisible(true);\n  };\n\n  const handleAreaEdit = (area) => {\n    setActiveArea(area);\n    setFormVisible(true);\n  };\n\n  const handleFormDialogClose = () => {\n    setFormVisible(false);\n  };\n\n  const handleSave = () => {\n    let genome = genomeBase;\n    let blueprintShell = {};\n    for (const area in props.definedAreas) {\n      for (const gene in props.definedAreas[area]) {\n        blueprintShell[gene] = props.definedAreas[area][gene];\n      }\n    }\n    genome[\"blueprint\"] = blueprintShell;\n    const fileName = `genome_${Date.now()}.json`;\n    fileDownload(JSON.stringify(genome), fileName);\n  };\n\n  let navigate = useNavigate();\n  const handleNext = () => {\n    navigate(\"/brain/mapping\");\n  };\n\n  const handleBack = () => {\n    navigate(\"/brain/sensorimotor\");\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleAreaNameDialogClose = () => {\n    setListedAreas([...listedAreas, addedAreaName]);\n    props.setCustomAreas([...props.customAreas, addedAreaName]);\n    setAreaNameDialogVisible(false);\n  };\n\n  const handleAreaNameDialogXout = () => {\n    setAreaNameDialogVisible(false);\n  };\n\n  const handleInputClick = (event) => {\n    event.target.value = \"\";\n  };\n\n  const handleGenomeUpload = async (event) => {\n    const genomeFileData = await FeagiAPI.postGenomeFileEdit({\n      file: event.target.files[0],\n    });\n\n    const genomeBlueprint = genomeFileData[\"blueprint\"];\n\n    let loadedAreas = {};\n    let groupIdAreaMap = {};\n    const loadedAreaNameGenes = Object.entries(genomeBlueprint).filter((gene) =>\n      gene[0].includes(\"name-\")\n    );\n\n    for (const areaNameGene of loadedAreaNameGenes) {\n      loadedAreas[genomeBlueprint[areaNameGene[0]]] = {};\n      groupIdAreaMap[areaNameGene[0].slice(9, 15)] = areaNameGene[1];\n    }\n\n    for (const gene in genomeBlueprint) {\n      loadedAreas[groupIdAreaMap[gene.slice(9, 15)]][gene] =\n        genomeBlueprint[gene];\n    }\n\n    setListedAreas(Object.keys(loadedAreas));\n    props.setDefinedAreas(loadedAreas);\n  };\n\n  const showForm = () => {\n    return (\n      <Dialog\n        open={formVisible}\n        onClose={handleFormDialogClose}\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogContent>\n          <CorticalAreaEditForm\n            setDialogOpen={setFormVisible}\n            definedSensory={props.definedSensory}\n            setDefinedSensory={props.setDefinedSensory}\n            definedMotor={props.definedMotor}\n            setDefinedMotor={props.setDefinedMotor}\n            definedAreas={props.definedAreas}\n            setDefinedAreas={props.setDefinedAreas}\n            defaultCorticalGenes={props.defaultCorticalGenes}\n            corticalArea={activeArea}\n          />\n        </DialogContent>\n      </Dialog>\n    );\n  };\n\n  const promptUserForAreaName = () => {\n    return (\n      <Dialog open={areaNameDialogVisible} fullWidth maxWidth=\"sm\">\n        <DialogContent>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <IconButton sx={{ mb: 2 }} onClick={handleAreaNameDialogXout}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ m: 1 }}>\n            <InputLabel sx={{ width: \"350px\" }}>\n              <Typography fontWeight=\"bold\">\n                Enter a name for the cortical area:{\" \"}\n              </Typography>\n            </InputLabel>\n            <TextField\n              id=\"filled-basic\"\n              variant=\"filled\"\n              onChange={(e) => setAddedAreaName(e.target.value)}\n              sx={{ width: \"330px\" }}\n            />\n          </Stack>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              onClick={handleAreaNameDialogClose}\n              disabled={!addedAreaName}\n            >\n              OK\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    );\n  };\n\n  return (\n    <>\n      <Typography variant=\"h4\" component=\"div\" sx={{ mt: 4, ml: 4, mb: 1 }}>\n        Define/Edit Cortical Areas\n      </Typography>\n      <TableContainer component={Paper} sx={{ mt: \"20px\" }}>\n        <Table>\n          <TableHead sx={{ backgroundColor: \"lightgray\" }}>\n            <TableRow>\n              <TableCell align=\"center\">\n                {<Typography variant=\"h5\">Area</Typography>}\n              </TableCell>\n              <TableCell align=\"left\">\n                {<Typography variant=\"h5\">Dimensions</Typography>}\n              </TableCell>\n              <TableCell align=\"left\">\n                {<Typography variant=\"h5\">Position</Typography>}\n              </TableCell>\n              <TableCell align=\"center\">\n                {<Typography variant=\"h5\">Management</Typography>}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {listedAreas\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((area, index) => (\n                <TableRow hover key={index}>\n                  <TableCell\n                    align=\"center\"\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ width: \"400px\" }}\n                  >\n                    {<Typography>{area}</Typography>}\n                  </TableCell>\n                  <TableCell style={{ width: \"500px\" }}>\n                    {\n                      <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                        <TextField\n                          id=\"filled-basic-dx\"\n                          label=\"X\"\n                          variant=\"filled\"\n                          disabled\n                          value={\n                            area in props.definedAreas\n                              ? props.definedAreas[area][\n                                  Object.keys(props.definedAreas[area]).filter(\n                                    (key) => key.includes(\"bbx\")\n                                  )[0]\n                                ]\n                              : \"none\"\n                          }\n                          sx={{ width: \"75px\" }}\n                          InputProps={{\n                            inputProps: {\n                              style: { textAlign: \"center\" },\n                            },\n                          }}\n                        />\n                        <TextField\n                          id=\"filled-basic-dy\"\n                          label=\"Y\"\n                          variant=\"filled\"\n                          disabled\n                          value={\n                            area in props.definedAreas\n                              ? props.definedAreas[area][\n                                  Object.keys(props.definedAreas[area]).filter(\n                                    (key) => key.includes(\"bby\")\n                                  )[0]\n                                ]\n                              : \"none\"\n                          }\n                          sx={{ width: \"75px\" }}\n                          InputProps={{\n                            inputProps: {\n                              style: { textAlign: \"center\" },\n                            },\n                          }}\n                        />\n                        <TextField\n                          id=\"filled-basic-dz\"\n                          label=\"Z\"\n                          variant=\"filled\"\n                          disabled\n                          value={\n                            area in props.definedAreas\n                              ? props.definedAreas[area][\n                                  Object.keys(props.definedAreas[area]).filter(\n                                    (key) => key.includes(\"bbz\")\n                                  )[0]\n                                ]\n                              : \"none\"\n                          }\n                          sx={{ width: \"75px\" }}\n                          InputProps={{\n                            inputProps: {\n                              style: { textAlign: \"center\" },\n                            },\n                          }}\n                        />\n                      </Stack>\n                    }\n                  </TableCell>\n                  <TableCell align=\"center\" style={{ width: \"400px\" }}>\n                    {\n                      <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                        <TextField\n                          id=\"filled-basic-px\"\n                          label=\"X\"\n                          variant=\"filled\"\n                          disabled\n                          value={\n                            area in props.definedAreas\n                              ? props.definedAreas[area][\n                                  Object.keys(props.definedAreas[area]).filter(\n                                    (key) => key.includes(\"rcordx\")\n                                  )[0]\n                                ]\n                              : \"none\"\n                          }\n                          sx={{ width: \"75px\" }}\n                          InputProps={{\n                            inputProps: {\n                              style: { textAlign: \"center\" },\n                            },\n                          }}\n                        />\n                        <TextField\n                          id=\"filled-basic-py\"\n                          label=\"Y\"\n                          variant=\"filled\"\n                          disabled\n                          value={\n                            area in props.definedAreas\n                              ? props.definedAreas[area][\n                                  Object.keys(props.definedAreas[area]).filter(\n                                    (key) => key.includes(\"rcordy\")\n                                  )[0]\n                                ]\n                              : \"none\"\n                          }\n                          sx={{ width: \"75px\" }}\n                          InputProps={{\n                            inputProps: {\n                              style: { textAlign: \"center\" },\n                            },\n                          }}\n                        />\n                        <TextField\n                          id=\"filled-basic-pz\"\n                          label=\"Z\"\n                          variant=\"filled\"\n                          disabled\n                          value={\n                            area in props.definedAreas\n                              ? props.definedAreas[area][\n                                  Object.keys(props.definedAreas[area]).filter(\n                                    (key) => key.includes(\"rcordz\")\n                                  )[0]\n                                ]\n                              : \"none\"\n                          }\n                          sx={{ width: \"75px\" }}\n                          InputProps={{\n                            inputProps: {\n                              style: { textAlign: \"center\" },\n                            },\n                          }}\n                        />\n                      </Stack>\n                    }\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {\n                      <>\n                        <Fab\n                          size=\"small\"\n                          color=\"primary\"\n                          aria-label=\"add-icon\"\n                          sx={{ m: 2 }}\n                          onClick={() => handleAreaEdit(area)}\n                        >\n                          <EditIcon />\n                        </Fab>\n                        <Fab\n                          size=\"small\"\n                          color=\"primary\"\n                          aria-label=\"delete-icon\"\n                          sx={{ m: 2 }}\n                          onClick={() => handleAreaDelete(area, index)}\n                        >\n                          <DeleteIcon />\n                        </Fab>\n                      </>\n                    }\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        <Fab\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"add\"\n          sx={{ mt: 7, ml: 2, mr: 2, mb: 2 }}\n          onClick={handleAreaAdd}\n        >\n          <AddIcon />\n        </Fab>\n        <Fab\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"save\"\n          sx={{ mt: 7, ml: 2, mr: 2, mb: 2 }}\n          disabled={!props.definedAreas}\n          onClick={handleSave}\n        >\n          <DownloadIcon />\n        </Fab>\n        <label htmlFor=\"genome-upload\">\n          <Input\n            id=\"genome-upload\"\n            accept=\".json\"\n            type=\"file\"\n            onChange={handleGenomeUpload}\n            onClick={handleInputClick}\n          />\n          <Fab\n            id=\"genome-upload\"\n            component=\"span\"\n            size=\"medium\"\n            color=\"primary\"\n            sx={{ mt: 7, ml: 2, mr: 2, mb: 2 }}\n          >\n            <UploadIcon />\n          </Fab>\n        </label>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={listedAreas.length}\n          rowsPerPage={parseInt(rowsPerPage, 10)}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </TableContainer>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={2}\n        sx={{ m: 8 }}\n      >\n        <Fab\n          size=\"large\"\n          color=\"primary\"\n          aria-label=\"add\"\n          sx={{ m: 1 }}\n          onClick={handleBack}\n        >\n          <ArrowBackIcon />\n        </Fab>\n        <Fab\n          size=\"large\"\n          color=\"primary\"\n          aria-label=\"add\"\n          sx={{ m: 1 }}\n          disabled={\n            Object.keys(props.definedAreas).length !== listedAreas.length\n          }\n          onClick={handleNext}\n        >\n          <ArrowForwardIcon />\n        </Fab>\n      </Stack>\n      {formVisible && showForm()}\n      {areaNameDialogVisible && promptUserForAreaName()}\n    </>\n  );\n};\n\nexport default CorticalAreaEditor;\n"],"names":["genomeBase","version","max_burst_count","burst_delay","evolution_burst_count","ipu_idle_threshold","neuron_morphologies","block_to_block","vectors","decrease_filter_diagonal","decrease_filter_diagonal2","increase_filter_diagonal","increase_filter_diagonal2","y_consolidator","patterns","one_to_all","all_to_one","expander_x","functions","reducer_x","randomizer","lateral_pairs_x","species","parents","species_id","class","brand","model","blueprint","props","useState","corticalArea","labelValue","setLabelValue","groupIdValue","setGroupIdValue","positionXValue","setPositionXValue","positionYValue","setPositionYValue","positionZValue","setPositionZValue","dimensionXValue","setDimensionXValue","dimensionYValue","setDimensionYValue","dimensionZValue","setDimensionZValue","defaultGenes","Object","keys","defaultCorticalGenes","forEach","key","Typography","gutterBottom","variant","component","sx","mb","Divider","Stack","direction","alignItems","spacing","m","InputLabel","width","TextField","id","label","defaultValue","onChange","e","target","value","inputProps","maxLength","justifyContent","mt","map","index","event","gene","Tooltip","title","Fab","size","color","disabled","onClick","definedArea","genePrefix","labelGene","concat","positionXGene","positionYGene","positionZGene","dimensionXGene","dimensionYGene","dimensionZGene","mappingGene","prefixedDefaultGenes","parseInt","assembleCorticalAreaData","setDefinedAreas","definedAreas","setDialogOpen","Save","Input","styled","display","selectedSensory","selectedMotor","customAreas","listedAreas","setListedAreas","formVisible","setFormVisible","activeArea","setActiveArea","rowsPerPage","setRowsPerPage","page","setPage","addedAreaName","setAddedAreaName","areaNameDialogVisible","setAreaNameDialogVisible","handleFormDialogClose","navigate","useNavigate","handleAreaNameDialogClose","setCustomAreas","handleAreaNameDialogXout","handleGenomeUpload","FeagiAPI","file","files","genomeFileData","genomeBlueprint","loadedAreas","groupIdAreaMap","loadedAreaNameGenes","entries","filter","includes","areaNameGene","slice","ml","TableContainer","Paper","Table","TableHead","backgroundColor","TableRow","TableCell","align","TableBody","area","hover","scope","style","InputProps","textAlign","handleAreaEdit","Edit","paginatedIndex","updatedAreas","splice","updatedDefinedAreas","handleAreaDelete","Delete","mr","Add","genome","blueprintShell","fileName","Date","now","fileDownload","JSON","stringify","Download","htmlFor","accept","type","Upload","TablePagination","rowsPerPageOptions","count","length","onPageChange","newPage","onRowsPerPageChange","ArrowBack","ArrowForward","Dialog","open","onClose","fullWidth","maxWidth","DialogContent","definedSensory","setDefinedSensory","definedMotor","setDefinedMotor","IconButton","Close","fontWeight","DialogActions","Button"],"sourceRoot":""}