Python to ardiuno/ros2 using sonar sensor only

More detail information: https://realpython.com/arduino-python/

Steps being done:
1) nano py2ardiuno.py
Copy and paste this in the py2ardiuno.py

import serial

import time

serialcomm = serial.Serial('/dev/ttyACM0', 9600)

serialcomm.timeout = 1

while True: #infinite loop until ctrl C
    print(serialcomm.readline().decode('ascii')) #this line reads from the ardiuno file

serialcomm.close()


2) chmod +x py2ardiuno.py
3) Open ardiuno ide and paste this:


const int trigPin = 9; //This connects to TRIG on sonar sensor.
const int echoPin = 10; //This connects to ECHO on sonar sensor.
long duration;
int distance;
String incomingByte ;    //This is for python to read.

void setup() {

  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600);
}

void loop() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance= duration*0.034/2;
  // Prints the distance on the Serial Monitor. To open Serial Monitor by press CTRL Shift M
  Serial.print("Distance: ");
  Serial.println(distance); //Sends to Python
}

4) Upload it to your board.
5) If Python recieves value from ardiuno, it means you are ready to do it on ardiuno/python to ROS2.

ardiuno/python to ROS2

First time only:
1) navigate to ~/feagi-core/src/ros/
2) ./ws_setup.sh
3) Source ~/ros_ws/install/setup.bash

To update/test the modified by you on the code:
1) Source ~/ros_ws/install/setup.bash
2) ./update.sh (do this in the root of ros2_ws when you update the code in ~/ros_ws/src/py_topic/py_topic/ros_laser_scan.py)
8) ros2 run py_topic ros_laser_scan








Problem section:
Problem #1: 
Traceback (most recent call last):
  File "./py2ardiuno", line 3, in <module>
    import pyfirmata
ModuleNotFoundError: No module named 'pyfirmata'

Solution: pip3 install pyfirmata

Problem #2: No respond or stuck in Ardiuno() in Python3 code
Solution: Use this line: board = Arduino("/dev/ttyACM0",baudrate=115200, timeout=3.0)

Problem #2: Python doesn't recieve anything from ardiuno. No error output.
Solution: This has a lot of things that could cause this.
1) Is sonar sensor working properly? Verify it with only ardiuno. You can obtain it from (Sonar Sensor example (link))
2) Is sonar sensor connected properly? Are pins secured? 
3) Does sonar sensor get 5v?
4) Is Python listening to the same port address as ardiuno board in? (Such as /dev/ttyACM0 for Ubutnu, COM1 for windows) You can verify the port from ardiuno ide's bottom right corner on any platform.
5) is /dev/ttyACM0 in dialout group? Is it with root? Can it read/write? (Winodws 8 and 10 need to follow this link:https://www.isunshare.com/windows-8/how-to-disable-or-enable-driver-signature-enforcement-in-windows-8-and-8.1.html and https://www.howtogeek.com/167723/how-to-disable-driver-signature-verification-on-64-bit-windows-8.1-so-that-you-can-install-unsigned-drivers/ 
6)  is ardiuno connected properly?
7) Is echo in pin 10 and trig in pin 9?
8) 


Problem #3:
Traceback (most recent call last):
  File "./py2ardiuno.py", line 12, in <module>
    board.pinMode(11, "OUTPUT")
AttributeError: 'Arduino' object has no attribute 'pinMode'

Solution #3: 

Problem #4:
Traceback (most recent call last):
  File "py2ardiuno", line 11, in <module>
    board = Arduino("/dev/ttyACM0", baudrate = 115200, timeout=2) # plugged in via USB, serial com at rate 115200
TypeError: __init__() got an unexpected keyword argument 'baudrate'


