version: "3"

networks:
  net:
    driver: bridge

services:
  influxdb:
    image: influxdb:2.0.7
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=$INFLUXDB_MODE
      - DOCKER_INFLUXDB_INIT_RETENTION=$INFLUXDB_RETENTION
      - DOCKER_INFLUXDB_INIT_USERNAME=$INFLUXDB_USERNAME
      - DOCKER_INFLUXDB_INIT_PASSWORD=$INFLUXDB_PASSWORD
      - DOCKER_INFLUXDB_INIT_ORG=$INFLUXDB_ORG
      - DOCKER_INFLUXDB_INIT_BUCKET=$INFLUXDB_BUCKET
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=$INFLUXDB_TOKEN
    ports:
      - 8086:8086
    volumes:
      - influxdb_data:/var/lib/influxdb
    healthcheck:
      test: "exit 0"
    networks:
      - net
      
  ros_gazebo:
    image: neuraville/feagi-smart-car
    deploy:
      resources:
        limits:
          cpus: '2'
    ports:
      - "6080:80"
    privileged: true
    networks:
      - net
      
  godot:
    image: neuraville/feagi-godot
    ports:
      - "6081:80"
    privileged: true
    networks:
      - net

  grafana:
    build: ../third_party/grafana/
    environment:
      - INFLUXDB_USER=$INFLUXDB_USERNAME
      - INFLUXDB_PASSWORD=$INFLUXDB_PASSWORD
      - INFLUXDB_TOKEN=$INFLUXDB_TOKEN
      - INFLUXDB_ORG=$INFLUXDB_ORG
      - INFLUXDB_BUCKET=$INFLUXDB_BUCKET
    ports:
      - 3001:3000
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - net

  feagi:
    build: ./
    environment:
      - CONTAINERIZED=true
      - PYTHONUNBUFFERED=1
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ../src/evo/static_genome.py:/opt/source-code/feagi-core/src/evo/static_genome.py
    networks:
      - net

volumes:
  grafana_data:
  influxdb_data:
