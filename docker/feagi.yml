version: "3"

networks:
  net:
    driver: bridge

services:
  influxdb:
    image: influxdb:2.0.7
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'
    ports:
      - 8086:8086
    env_file:
      - ./.env
    volumes:
      - influxdb_data:/var/lib/influxdb
#    healthcheck:
#      test: "exit 0"
    networks:
      - net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8086" ]
      interval: 10s
      timeout: 10s
      retries: 5

  grafana:
    build: ../third_party/grafana/
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'
    env_file:
      - ./.env
    ports:
      - 6082:3000
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - net
    depends_on:
      influxdb:
        condition: service_healthy
#
#  ros-gazebo:
#    build: ../third_party/gazebo/simulation
#    deploy:
#      resources:
#        limits:
#          cpus: '4'
#          memory: '3g'
#    ports:
#      - "6080:80"
#    env_file:
#      - ./.env
#    privileged: true
#    networks:
#      - net
#    volumes:
#      #- <local path>:<docker path>                                 Only update the local path, keep docker path static
#      # Robot mapping
#      - ../third_party/gazebo/simulation/robots/smart_car/smart_car.sdf:/opt/source-code/simulation/robots/smart_car/smart_car.sdf
#      # Environment mapping
#      - ../third_party/gazebo/simulation/environments/material/map1.png:/opt/source-code/simulation/environments/material/map1.png

  brain_visualizer:
    build: ../third_party/godot/html
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'
    ports:
      - "6085:6085"
    env_file:
      - ./.env
    privileged: true
    networks:
      - net
    depends_on:
      - godot_bridge

  godot_bridge:
    build: ../third_party/godot/
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'
    ports:
      - "6081:8080"
      - "9050:9050"
      - "30001:30001" # ZMQ port for feagi to connect for Gadot
    env_file:
      - ./.env
    privileged: true
    networks:
      - net
    depends_on:
      - feagi

  feagi:
    build: ./
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'
    ports:
      - "8000:8000"
      - "40000-40050:40000-40050" # ZMQ Port for Agent to Connect to Feagi
    env_file:
      - ./.env
    volumes:
      - ../src/:/opt/source-code/feagi/src
    networks:
      - net
    depends_on:
      influxdb:
        condition: service_healthy

  gui:
    build:
      context: ../src/gui/
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    networks:
      - net
    depends_on:
      - feagi



volumes:
  grafana_data:
  influxdb_data:
